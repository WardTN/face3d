precision mediump float;

// colors
uniform vec4 vColor;
uniform vec4 vColorMask;

uniform sampler2D u_Texture;
varying vec2 v_TexCoordinate;

// overlay texture
uniform sampler2D u_OverlayTexture;

// 控制是否使用叠加纹理的变量
uniform bool useOverlayTexture;


void main(){

   // Sample the base texture
       vec4 baseColor = texture2D(u_Texture, v_TexCoordinate);

       vec4 finalColor;
       if (useOverlayTexture) {
           // Sample the overlay texture
           vec4 overlayColor = texture2D(u_OverlayTexture, v_TexCoordinate);
           // Mix the two textures using the alpha channel of the overlay texture
           finalColor = mix(baseColor, overlayColor, overlayColor.a);
       } else {
           // Use only the base texture
           finalColor = baseColor;
       }

       // Apply vColor and vColorMask
       gl_FragColor = vColor * finalColor * vColorMask;
  }