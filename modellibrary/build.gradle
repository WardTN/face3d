plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
//    id 'maven-publish'
}

//task generateSourcesJar(type: Jar) {
//    from android.sourceSets.main.java.srcDirs
//    classifier 'sources'
//}
android {
    namespace 'com.wardtn.modellibrary'
    compileSdk 34

    defaultConfig {
        minSdk 22

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    //指定so库的位置，加载so库
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            assets.srcDirs = ['src/main/assets']
        }
    }

//    afterEvaluate {
//        publishing {
//            def versionName = "1.0.2" // 当前版本依赖库版本号，这个jitpack不会使用到，只是我们开发者自己查看
//            publications {
//                // Creates a Maven publication called "release".
//                release(MavenPublication) {
//                    // Applies the component for the release build variant.
//                    from components.release // 表示发布 release（jitpack 都不会使用到）
//
//                    // You can then customize attributes of the publication as shown below.
//                    groupId = 'com.wardtn.modelLibrary' // 这个是依赖库的组 id
//                    artifactId = 'modelLibrary' // 依赖库的名称（jitpack 都不会使用到）
//                    version = versionName
//                }
//            }
//            repositories {
//                // 下面这部分，不是很清楚加不加，但是最后加上
//                maven {
//                    // change URLs to point to your repos, e.g. http://my.org/repo
//                    def baseUrl = buildDir.getParent()
//                    def releasesRepoUrl = "$baseUrl/repos/releases"
//                    def snapshotsRepoUrl = "$baseUrl/repos/snapshots"
//                    url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
//                }
//            }
//        }
//    }
}


dependencies {
    implementation libs.appcompat
    implementation libs.material
    testImplementation libs.junit
    androidTestImplementation libs.ext.junit
    androidTestImplementation libs.espresso.core
}